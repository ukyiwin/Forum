{"version":3,"file":"static/js/15.3fd36437.chunk.js","sources":["webpack:///./src/common/pages/SignUp/SignUpForm.js"],"sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm} from 'redux-form'\r\nimport { Button, Form,Input,Message } from 'semantic-ui-react'\r\nconst axios = require('axios');\r\n\r\n\r\nclass SignUpForm extends React.Component {\r\n\r\n    renderInput = props => {\r\n        const {meta} = props;\r\n        return (\r\n            <div style={{margin:'0 0 1rem'}}>\r\n                <Form.Field {...props} error={meta.touched && meta.invalid}/>\r\n                {meta.touched && meta.error && <Message content={meta.error} negative/>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = formValues => {\r\n        this.props.onSubmit(formValues)\r\n    }\r\n    render() {\r\n        const {handleSubmit,invalid,submitting,error} = this.props\r\n        return(\r\n            <Form onSubmit={handleSubmit(this.onSubmit)}>\r\n                <Field name=\"username\" placeholder=\"Username\"  component={this.renderInput} control={Input} />\r\n                <Field name=\"email\" placeholder=\"Email\"  component={this.renderInput} control={Input} />\r\n                <Field name=\"password\" placeholder=\"Password\" type=\"password\" component={this.renderInput} control={Input} />\r\n                <Field name=\"comfirmpassword\" placeholder=\"Comfirm Password\" type=\"password\" component={this.renderInput} control={Input} />\r\n                <Button style={{boxShadow: 'rgba(0, 118, 255, 0.23) 0px 6px 20px'}} secondary fluid size='large' type='submit' disabled={invalid} loading={submitting}>Sign Up</Button>\r\n                {error && <Message content={error} negative/>}\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n    if (!values.username) {\r\n        errors.username = 'Required username or email field'\r\n    }\r\n    if (!values.email) {\r\n        errors.email = 'Required email field'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address'\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Required password field'\r\n    } else if (values.password.length > 15) {\r\n        errors.password = 'Must be 15 characters or less'\r\n    } else if (!/^(?=.*[a-z])(?=.*[A-Z]).{8,}$/i.test(values.password)){\r\n        errors.password = 'Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters'\r\n    }\r\n    \r\n    if (!values.comfirmpassword) {\r\n        errors.comfirmpassword = 'Required comfirm field'\r\n    } else if (values.comfirmpassword !== values.password) {\r\n        errors.comfirmpassword = 'Password does not match'\r\n    }\r\n    return errors;\r\n}\r\n\r\n\r\nconst asyncValidate = (values, dispatch, props, field) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (!field) return resolve()\r\n      if (field === 'username') {\r\n        return axios.get(`/api/users/hasname/${values.username}`)\r\n        .then(function (response) {\r\n          if(response.data.hasName){\r\n            return reject({\r\n              ...props.asyncErrors,\r\n              [field]: 'That username is taken'\r\n            })\r\n          }\r\n        }).catch(() => resolve())\r\n      }\r\n      if (field === 'email'){\r\n        return axios.get(`/api/users/hasemail/${values.email}`)\r\n        .then(function (response) {\r\n          console.log(response.data);\r\n          if(response.data.hasEmail){\r\n            return reject({\r\n              ...props.asyncErrors,\r\n              [field]: 'Email is already exist!'\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n    form:'SignUpForm',\r\n    validate,\r\n    asyncValidate,\r\n    asyncChangeFields: ['username','email']\r\n})(SignUpForm)"],"mappings":"AAGA","sourceRoot":""}