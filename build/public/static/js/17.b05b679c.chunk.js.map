{"version":3,"file":"static/js/17.b05b679c.chunk.js","sources":["webpack:///./src/common/components/GoogleAuth.js"],"sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Button,Icon } from 'semantic-ui-react'\r\n\r\n\r\nimport { googleSign } from '../actions/auth'\r\n\r\nclass GoogleAuth extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const script = document.createElement('script')\r\n        script.src = 'https://apis.google.com/js/api.js'\r\n        script.onload = () => {\r\n            window.gapi.load('client:auth2', ()=>{\r\n                window.gapi.client.init({\r\n                    clientId: '417870343375-5hv0rlods60p4083sotur6tem464q9us.apps.googleusercontent.com',\r\n                    scope: 'email'\r\n                }).then(()=>{\r\n                    this.auth = window.gapi.auth2.getAuthInstance();\r\n                    // this.onAuthChange(this.auth.isSignedIn.get())\r\n                    // this.auth.isSignedIn.listen(this.onAuthChange)\r\n                })\r\n            })\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    // onAuthChange = (isSignedIn) => {\r\n    //     if(isSignedIn){\r\n    //         this.props.googleSignIn(this.auth.currentUser.get().getId())\r\n    //     }else{\r\n    //         this.props.googleSignOut()\r\n    //     }\r\n    // }\r\n\r\n    onSignInClick = (props) => {\r\n        console.log('onSignInClick',this.props)\r\n        // this.auth.signIn();\r\n        this.auth.grantOfflineAccess().then(this.googleSignInCallback)\r\n    }\r\n\r\n    googleSignInCallback = (authResult) => {\r\n        this.props.googleSign(authResult['code'])\r\n    }\r\n    // onSignOutClick = () => {\r\n    //     this.auth.signOut();\r\n    // }\r\n\r\n\r\n    render() {\r\n        const { history } = this.props\r\n        return (\r\n            <Button onClick={this.onSignInClick} style={{margin:'0 0 1rem',boxShadow: 'rgba(0, 118, 255, 0.23) 0px 6px 20px',background:'#d34836',color:'white'}} fluid size='large'>\r\n                <Icon name='google' />Google\r\n            </Button> \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    null,\r\n    { googleSign }\r\n)(GoogleAuth)"],"mappings":"AAOA","sourceRoot":""}